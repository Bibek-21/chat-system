 
 //login ko
 <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

  <script>
    $(document).ready(function () {
      $('form').submit(function (event) {
        event.preventDefault(); // Prevent the default form submission behavior

        // Collect form data
        const userName = $('#userName').val();
        const password = $('#password').val();

        const userData = {
          userName: userName,
          password: password
        };

        // Send AJAX request to the API
        $.ajax({
          url: 'http://localhost:3000/api-v1/login/loginuser',
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          data: JSON.stringify(userData),

          success: function (response) {

            console.log(userData);
            // You can handle the success response here (e.g., show a success message)
          },
          error: function (error) {
            console.error("There is an error");
            // You can handle the error response here (e.g., show an error message)
          }
        });
      });
    });
  </script>


  
  //signup ko ajax
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


  <script>
    $(document).ready(function () {
      $('form').submit(function (event) {
        event.preventDefault(); // Prevent the default form submission behavior
  
        // Collect form data
        const firstName = $('#firstName').val();
        const lastName = $('#lastName').val();
        const email = $('#email').val();
        const password = $('#password').val();
  
        const userData = {
          firstName: firstName,
          lastName: lastName,
          email: email,
          password: password
        };
  
        // Send AJAX request to the API
        $.ajax({
          url: 'http://localhost:3000/api-v1/register/createuser',
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          data: JSON.stringify(userData),
  
          success: function (response) {
            
            console.log(userData);
            // You can handle the success response here (e.g., show a success message)
          },
          error: function (error) {
            console.error("error");
            // You can handle the error response here (e.g., show an error message)
          }
        });
      });
    });
  </script>





  //mesaeui ko html file
  <!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.14.0/css/all.min.css"
      integrity="sha512-1PKOgIY59xJ8Co8+NE6FZ+LOAZKjy+KY8iq0G4B3CyeY6wYHN3yt9PW0XpSriVlkMXe40PTKnXrLnZ9+fkDaog=="
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="../public/styles.css" />
    <title>Chat app</title>
  </head>
  <body>
    <h1 class="title">KuraKani üí¨</h1>
    <div class="main">
      <div class="name">
        <span><i class="far fa-user"></i></span>
        <input
          type="text"
          id="name-input"
          class="name-input"
          value="{{name}}"
          maxlength="20"
        />
      </div>

      <ul class="message-container" id="message-container">
        <!-- These li elements are only for reference, and therefore, they are commented out... -->
        <!-- <li class="message-left">
          <p class="message">
            <span></span>
          </p>
        </li>

        <li class="message-right">
          <p class="message">
            <span></span>
          </p> 
        </li>
       
        <li class="message-feedback">
          <p class="feedback" id="feedback"> ‚úçÔ∏è killer is typing a message..</p>
        </li> -->
      </ul>

      <form class="message-form" id="message-form" action="/api-v1/login/loginuser" method="post">
        <input
          type="text"
          name="message"
          id="message-input"
          class="message-input"
        />
        <div class="v-divider"></div>
        <button type="submit" class="send-button">
          send <span><i class="fas fa-paper-plane"></i></span>
        </button>
      </form>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.28.0/moment.min.js"
      integrity="sha512-Q1f3TS3vSt1jQ8AwP2OuenztnLU6LwxgyyYOG1jgMW/cbEMHps/3wjvnl1P3WTrF3chJUWEoxDUEjMxDV8pujg=="
      crossorigin="anonymous"
    ></script>
    <script src="main.js"></script>
  </body>
</html>



friday ko kam migration garniii -->

chat ko databse banaunui userid roomid to date message_body uuid isdelete 

chatroom banaunu
when i select one person the chat room  name that have id mine uuid + his uuid must be opened


euta person ley login garxa ani tokrn generate hunxa valid for 3hr example
ani 3 hrs paxi login ko info nai delete hunxa afai ani yoken hunna
aba when he wants to select a user then he need to provide the token 
and if no token then renders login page with message session expired

when he wants to send messsage we check the tok if token is valid
message is sent if not the login page is rendered with message
session end 


main chai if time vyo vaney login bata aafai delete hunu paryo the token and alll inos

first kam room banauni 





